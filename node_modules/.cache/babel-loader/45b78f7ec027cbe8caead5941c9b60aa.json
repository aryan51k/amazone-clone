{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\"Cant remove as it is not there\");\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case 'SET_USER':\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/aryan/Desktop/react-amazon/amazon-clone/src/reducer.js"],"names":["initialState","basket","user","reducer","state","action","type","item","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB;;AAMP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,MAAM,CAACE,IAAzB;AAFL,OAAP;;AAKJ,SAAK,oBAAL;AAEI,YAAMC,KAAK,GAAGJ,KAAK,CAACH,MAAN,CAAaQ,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACM,EAD/B,CAAd;AAEA,UAAIC,SAAS,GAAG,CAAC,GAAGR,KAAK,CAACH,MAAV,CAAhB;;AAEA,UAAIO,KAAK,IAAI,CAAb,EAAe;AACXI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAuB,CAAvB;AACH,OAFD,MAGI;AACAM,QAAAA,OAAO,CAACC,IAAR,CAAa,gCAAb;AACH;;AACD,aAAM,EACF,GAAGX,KADD;AAEFH,QAAAA,MAAM,EAAEW;AAFN,OAAN;;AAIJ,SAAK,UAAL;AACI,aAAM,EACF,GAAGR,KADD;AAEFF,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAFX,OAAN;;AAKJ;AACI,aAAOE,KAAP;AA9BR;AAgCH,CAlCD;;AAoCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    basket: [],\n    user: null\n};\n\n\nconst reducer = (state, action) => {\n    \n    switch(action.type){\n        case 'ADD_TO_BASKET':\n            return {\n                ...state,\n                basket: [...state.basket, action.item],\n            };\n        \n        case 'REMOVE_FROM_BASKET':\n\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id === action.id);\n            let newBasket = [...state.basket]\n            \n            if (index >= 0){\n                newBasket.splice(index,1)\n            }\n            else{\n                console.warn(\"Cant remove as it is not there\")\n            }\n            return{\n                ...state,\n                basket: newBasket\n            }\n        case 'SET_USER':\n            return{\n                ...state,\n                user: action.user\n            }\n            \n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}